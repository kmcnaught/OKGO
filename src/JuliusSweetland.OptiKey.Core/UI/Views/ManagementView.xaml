<!--
Copyright (c) 2022 OPTIKEY LTD (UK company number 11854839) - All Rights Reserved
-->
<UserControl x:Class="JuliusSweetland.OptiKey.UI.Views.ManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactionRequest="http://www.codeplex.com/prism"
             xmlns:triggerActions="clr-namespace:JuliusSweetland.OptiKey.UI.TriggerActions"
             xmlns:management="clr-namespace:JuliusSweetland.OptiKey.UI.Views.Management"
             xmlns:resx="clr-namespace:JuliusSweetland.OptiKey.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <i:Interaction.Triggers>
        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <triggerActions:ConfirmationWindowAction />
        </interactionRequest:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
             <RowDefinition Height="*"/>
             <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
    <Grid.Resources>
      <Style TargetType="{x:Type TextBlock}">
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="Black" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type CheckBox}">
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="White" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <Style TargetType="{x:Type Path}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
          </Style>
        </Style.Resources>
      </Style>
    </Grid.Resources>
    <TabControl Grid.IsSharedSizeScope="True">
      <TabItem Header="{x:Static resx:Resources.VISUALS}">
          <management:VisualsView DataContext="{Binding VisualsViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="{x:Static resx:Resources.SOUNDS}">
          <management:SoundsView DataContext="{Binding SoundsViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="{x:Static resx:Resources.WORDS}">
          <management:WordsView DataContext="{Binding WordsViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="{x:Static resx:Resources.POINT_AND_SELECTING}">
          <management:PointingAndSelectingView DataContext="{Binding PointingAndSelectingViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="{x:Static resx:Resources.DICTIONARY}">
          <management:DictionaryView DataContext="{Binding DictionaryViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="Gestures">
          <management:GesturesView DataContext="{Binding GesturesViewModel, Mode=OneWay}" />
        </TabItem>
        <TabItem Header="{x:Static resx:Resources.FEATURES_LABEL}">
          <management:FeaturesView DataContext="{Binding FeaturesViewModel, Mode=OneWay}" />
        </TabItem>
    </TabControl>
    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Command="{Binding OkCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
                    MinWidth="100" Margin="0,5,5,5" VerticalAlignment="Center">
                <x:Static Member="resx:Resources.OK"/></Button>
            <Button Command="{Binding CancelCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
                    MinWidth="100" Margin="0,5,5,5" VerticalAlignment="Center">
                <x:Static Member="resx:Resources.CANCEL"/>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
