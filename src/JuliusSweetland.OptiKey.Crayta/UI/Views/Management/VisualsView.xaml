<!--
// Copyright (c) K McNaught Consulting Ltd (UK company number 11297717) - All Rights Reserved
// based on GPL3 code Copyright (c) 2020 OPTIKEY LTD (UK company number 11854839) - All Rights Reserved
-->
<UserControl x:Class="JuliusSweetland.OptiKey.Crayta.UI.Views.Management.VisualsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:resx="clr-namespace:JuliusSweetland.OptiKey.Properties;assembly=OptiKey"
             xmlns:resxEm="clr-namespace:JuliusSweetland.OptiKey.Crayta.Properties"
             xmlns:valueConvertersEm="clr-namespace:JuliusSweetland.OptiKey.Crayta.UI.ValueConverters"
             xmlns:valueConverters="clr-namespace:JuliusSweetland.OptiKey.UI.ValueConverters;assembly=OptiKey"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/OptiKey;component/Resources/Icons/KeySymbols.xaml" />
                <ResourceDictionary>
                    <valueConverters:EnabledIfNotOverridden x:Key="EnabledIfNotOverridden" />
                    <valueConverters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
                    <valueConvertersEm:StringOrEmptyLabel x:Key="StringOrEmptyLabel"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <!-- hide position-related props if size&position can't be changed, disable if this is temporary -->
            <Style x:Key="VisibilityOfPositionProperties"
                   TargetType="{x:Type FrameworkElement}">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="False" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MaximisedApp}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding PersistedWindowState}" Value="True">
                        <Setter Property="IsEnabled" Value="True" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MainWindowState}" Value="Maximised">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MainWindowState}" Value="Minimised">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!-- as above, but collapse if not docked -->
            <Style x:Key="VisibilityOfDockProperties"
                   TargetType="{x:Type FrameworkElement}"
                   BasedOn="{StaticResource VisibilityOfPositionProperties}">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MainWindowState}" Value="Docked">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!-- as above, but collapse if not floating -->
            <Style x:Key="VisibilityOfFloatingProperties"
                   TargetType="{x:Type FrameworkElement}"
                   BasedOn="{StaticResource VisibilityOfPositionProperties}">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MainWindowState}" Value="Floating">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- FIXME resource -->
            <GroupBox Grid.Row="0" Header="Content">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumn" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static resx:Resources.STARTUP_KEYBOARD_LABEL}" 
                               VerticalAlignment="Center" Margin="5">
                    </TextBlock>
                    
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding StartupOptionsList}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding StartupKeyboardOption, Mode=TwoWay}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Resources.STARTUP_KEYBOARD_FILE_LOCATION_LABEL}" 
                               VerticalAlignment="Center" Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardFile">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Name="txtStartupKeyboardLocation"
                               Grid.Row="1" Grid.Column="1" 
                               Text="{Binding StartupKeyboardFile, Converter={StaticResource StringOrEmptyLabel}, Mode=TwoWay}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Center"
                               Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardFile">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                        <Button Click="FindStartupKeyboardFile" MinWidth="100" Margin="5,5,5,5" 
                                VerticalAlignment="Center"  
                                HorizontalAlignment="Right">
                            <x:Static Member="resx:Resources.MARYTTS_LOCATION_FIND_LABEL"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardFile">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Resources.DYNAMIC_KEYBOARDS_LOCATION_LABEL}" 
                               VerticalAlignment="Center" Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardsFolder">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="1" 
                               Name="txtKeyboardsLocation"
                               Text="{Binding CustomDynamicKeyboardsLocation, Converter={StaticResource StringOrEmptyLabel}, Mode=TwoWay}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Center"
                               Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardsFolder">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                        <Button Click="CopyKeyboards" MinWidth="100" Margin="5,5,5,5" 
                                VerticalAlignment="Center"  
                                HorizontalAlignment="Right">
                            <x:Static Member="resxEm:Resources.COPY_KEYBOARDS"/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardsFolder">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Click="FindKeyboardsFolder" MinWidth="100" Margin="5,5,5,5" 
                                VerticalAlignment="Center"  
                                HorizontalAlignment="Right">
                            <x:Static Member="resxEm:Resources.SELECT_FOLDER"/>
                            
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StartupKeyboardOption}" Value="CustomKeyboardsFolder">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="1" Header="POSITION">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumn" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Window state" 
                               VerticalAlignment="Center" Margin="5" />
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding MainWindowStates}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding MainWindowState, Mode=TwoWay}" />

                    <TextBlock Grid.Row="16" Grid.Column="0" Text="{x:Static resx:Resources.FLOATING_POSITION_LABEL}" 
                               VerticalAlignment="Center" Margin="5" Style="{StaticResource VisibilityOfFloatingProperties}"/>
                    <TextBox Grid.Row="16" Grid.Column="1" Text="{Binding FloatingSizeAndPosition, Mode=TwoWay}" 
                             VerticalAlignment="Center" Margin="5" Style="{StaticResource VisibilityOfFloatingProperties}"/>

                    <!-- FIXME: resource -->
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Dock position" 
                               VerticalAlignment="Center" Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MainWindowState}" Value="Docked">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <ComboBox Grid.Row="1" Grid.Column="1" 
                              ItemsSource="{Binding DockPositions}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding DockPosition, Mode=TwoWay}" >
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MainWindowState}" Value="Docked">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Dock height (as % of screen)" 
                               VerticalAlignment="Center" Margin="5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MainWindowState}" Value="Docked">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <controls:NumericUpDown Grid.Row="2" Grid.Column="1" TextAlignment="Left"
                                            Minimum="10" Maximum="70" Interval="1"
                                            StringFormat="{}{0:N1} %"
                                            Value="{Binding MainWindowFullDockThicknessAsPercentageOfScreen, Mode=TwoWay}">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MainWindowState}" Value="Docked">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>

                    <TextBlock Grid.Row="19" Grid.Column="0" Text="{x:Static resx:Resources.ENABLE_RESIZE_WITH_MOUSE}" 
                               VerticalAlignment="Center" Margin="5" />
                    <CheckBox Grid.Row="19" Grid.Column="1" 
                              VerticalAlignment="Center"
                              IsChecked="{Binding EnableResizeWithMouse, Mode=TwoWay}" />
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="2" Header="{x:Static resx:Resources.LOOK}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumn" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static resx:Resources.THEME_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding Themes}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding Theme, Mode=TwoWay}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Resources.OPACITY_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <controls:NumericUpDown Grid.Row="1" Grid.Column="1" TextAlignment="Left"
                                            StringFormat="{}{0:N1} %"
                                            Minimum="10" Maximum="100" Interval="10"
                                            Value="{Binding Opacity, Mode=TwoWay}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Resources.SCRATCHPAD_NUMBER_OF_LINES_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <controls:NumericUpDown Grid.Row="2" Grid.Column="1" TextAlignment="Left"
                                            Minimum="1" Maximum="3" Interval="1"
                                            Value="{Binding ScratchpadNumberOfLines, Mode=TwoWay}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static resx:Resources.MAGNIFY_SOURCE_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <controls:NumericUpDown Grid.Row="3" Grid.Column="1" TextAlignment="Left"
                                            Minimum="10" Maximum="100"  Interval="10"
                                            Value="{Binding MagnifySourcePercentageOfScreen, Mode=TwoWay}" />

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="{x:Static resx:Resources.MAGNIFY_DESTINATION_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <controls:NumericUpDown Grid.Row="4" Grid.Column="1" TextAlignment="Left"
                                            Minimum="10" Maximum="100" Interval="10"
                                            Value="{Binding MagnifyDestinationPercentageOfScreen, Mode=TwoWay}" />

                </Grid>
            </GroupBox>


            <GroupBox Grid.Row="4" Header="{x:Static resx:Resources.FONT}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumn" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static resx:Resources.FONT_FAMILY_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding FontFamilies}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding FontFamily, Mode=TwoWay}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Resources.FONT_STRETCH_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <ComboBox Grid.Row="1" Grid.Column="1" 
                              ItemsSource="{Binding FontStretches}"
                              SelectedValue="{Binding FontStretch, Mode=TwoWay}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Resources.FONT_WEIGHT_LABEL}" 
                               VerticalAlignment="Center" Margin="5" />
                    <ComboBox Grid.Row="2" Grid.Column="1" 
                              ItemsSource="{Binding FontWeights}"
                              SelectedValue="{Binding FontWeight, Mode=TwoWay}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static resx:Resources.KEY_CASE_LABEL}" 
                               VerticalAlignment="Center" Margin="5"/>
                    <ComboBox Grid.Row="3" Grid.Column="1" 
                              ItemsSource="{Binding KeyCases}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding KeyCase, Mode=TwoWay}" />
                </Grid>
            </GroupBox>
        </Grid>
    </ScrollViewer>
</UserControl>
